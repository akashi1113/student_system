<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csu.sms.persistence.StudyRecordDao">
    <resultMap id="StudyRecordResultMap" type="com.csu.sms.model.course.StudyRecord">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="videoId" column="video_id"/>
        <result property="progress" column="progress"/>
        <result property="videoDuration" column="video_duration"/>
        <result property="lastPlaybackPosition" column="last_playback_position"/>
        <result property="maxProgress" column="max_progress"/>
        <result property="isCompleted" column="is_completed" javaType="java.lang.Boolean"/>
        <result property="completed" column="completed"/>
        <result property="totalWatchTime" column="total_watch_time"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <insert id="insertStudyRecord" parameterType="com.csu.sms.model.course.StudyRecord" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO study_record (
            user_id, video_id, progress, video_duration,
            last_playback_position, max_progress,
            is_completed, completed, total_watch_time,
            create_time, update_time
        )
        VALUES (
            #{userId}, #{videoId}, #{progress}, #{videoDuration},
            #{lastPlaybackPosition}, #{maxProgress},
            #{isCompleted}, #{completed}, #{totalWatchTime},
            NOW(), NOW()
        )
        ON DUPLICATE KEY UPDATE
            progress = VALUES(progress),
            video_duration = VALUES(video_duration),
            last_playback_position = VALUES(last_playback_position),
            max_progress = GREATEST(max_progress, VALUES(max_progress)),
            is_completed = VALUES(is_completed),
            completed = VALUES(completed),
            total_watch_time = total_watch_time + VALUES(total_watch_time),
            update_time = NOW()
    </insert>

    <update id="updateStudyRecord" parameterType="com.csu.sms.model.course.StudyRecord">
        UPDATE study_record
        SET progress = #{progress},
            video_duration = #{videoDuration},
            last_playback_position = #{lastPlaybackPosition},
            max_progress = #{maxProgress},
            is_completed = #{isCompleted},
            completed = #{completed},
            total_watch_time = #{totalWatchTime},
            update_time = NOW()
        WHERE user_id = #{userId} AND video_id = #{videoId}
    </update>

    <select id="getStudyRecordByUserIdAndVideoId" resultMap="StudyRecordResultMap">
        SELECT * FROM study_record WHERE user_id = #{userId} AND video_id = #{videoId}
    </select>

    <select id="findAllByUserId" resultMap="StudyRecordResultMap">
        SELECT * FROM study_record WHERE user_id = #{userId} ORDER BY update_time DESC
    </select>

    <select id="findByUserIdAndVideoIds" resultMap="StudyRecordResultMap">
        SELECT * FROM study_record
        WHERE user_id = #{userId}
        AND video_id IN
        <foreach item="videoId" collection="videoIds" open="(" separator="," close=")">
            #{videoId}
        </foreach>
    </select>

    <select id="countCompletedVideosByUserIdAndVideoIds" resultType="int">
        SELECT COUNT(*) FROM study_record
        WHERE user_id = #{userId}
        AND video_id IN
        <foreach item="videoId" collection="videoIds" open="(" separator="," close=")">
            #{videoId}
        </foreach>
        AND (is_completed = TRUE OR completed = 1)
    </select>

</mapper>
