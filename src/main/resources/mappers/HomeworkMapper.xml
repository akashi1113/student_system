<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.csu.sms.persistence.HomeworkMapper">

    <!-- ================ ResultMap定义 ================ -->
    <resultMap id="HomeworkResultMap" type="com.csu.sms.model.homework.Homework">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="description" property="description"/>
        <result column="course_id" property="courseId"/>
        <result column="teacher_id" property="teacherId"/>
        <result column="homework_type" property="homeworkType"/>
        <result column="total_score" property="totalScore"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="allow_resubmit" property="allowResubmit"/>
        <result column="max_submit_times" property="maxSubmitTimes"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="teacher_name" property="teacherName"/>
        <result column="course_title" property="courseTitle"/>
    </resultMap>

    <resultMap id="HomeworkQuestionResultMap" type="com.csu.sms.model.homework.HomeworkQuestion">
        <id column="id" property="id"/>
        <result column="homework_id" property="homeworkId"/>
        <result column="question_order" property="questionOrder"/>
        <result column="question_type" property="questionType"/>
        <result column="question_content" property="questionContent"/>
        <result column="question_options" property="questionOptions"/>
        <result column="correct_answer" property="correctAnswer"/>
        <result column="score" property="score"/>
        <result column="analysis" property="analysis"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <resultMap id="HomeworkSubmissionResultMap" type="com.csu.sms.model.homework.HomeworkSubmission">
        <id column="id" property="id"/>
        <result column="homework_id" property="homeworkId"/>
        <result column="student_id" property="studentId"/>
        <result column="submit_times" property="submitTimes"/>
        <result column="submit_time" property="submitTime"/>
        <result column="total_score" property="totalScore"/>
        <result column="status" property="status"/>
        <result column="teacher_feedback" property="teacherFeedback"/>
        <result column="grade_time" property="gradeTime"/>
        <result column="graded_by" property="gradedBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="student_name" property="studentName"/>
        <result column="homework_title" property="homeworkTitle"/>
        <result column="course_title" property="courseTitle"/>
    </resultMap>

    <resultMap id="HomeworkAnswerResultMap" type="com.csu.sms.model.homework.HomeworkAnswer">
        <id column="id" property="id"/>
        <result column="submission_id" property="submissionId"/>
        <result column="question_id" property="questionId"/>
        <result column="student_answer" property="studentAnswer"/>
        <result column="score" property="score"/>
        <result column="is_correct" property="isCorrect"/>
        <result column="teacher_comment" property="teacherComment"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="question_content" property="questionContent"/>
        <result column="correct_answer" property="correctAnswer"/>
        <result column="question_score" property="questionScore"/>
    </resultMap>

    <!-- ================ 作业管理SQL ================ -->
    <insert id="insertHomework" parameterType="com.csu.sms.model.homework.Homework"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO homework (
            title, description, course_id, teacher_id, homework_type,
            total_score, start_time, end_time, allow_resubmit, max_submit_times, status
        ) VALUES (
                     #{title}, #{description}, #{courseId}, #{teacherId}, #{homeworkType},
                     #{totalScore}, #{startTime}, #{endTime}, #{allowResubmit}, #{maxSubmitTimes}, #{status}
                 )
    </insert>

    <update id="updateHomework" parameterType="com.csu.sms.model.homework.Homework">
        UPDATE homework SET
                            title = #{title},
                            description = #{description},
                            homework_type = #{homeworkType},
                            total_score = #{totalScore},
                            start_time = #{startTime},
                            end_time = #{endTime},
                            allow_resubmit = #{allowResubmit},
                            max_submit_times = #{maxSubmitTimes},
                            status = #{status},
                            update_time = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <delete id="deleteHomework" parameterType="java.lang.Long">
        DELETE FROM homework WHERE id = #{id}
    </delete>

    <select id="selectHomeworkById" parameterType="java.lang.Long" resultMap="HomeworkResultMap">
        SELECT h.*, u.username AS teacher_name, c.title AS course_title
        FROM homework h
                 LEFT JOIN user u ON h.teacher_id = u.id
                 LEFT JOIN course c ON h.course_id = c.id
        WHERE h.id = #{id}
    </select>

    <select id="selectHomeworkByTeacherId" parameterType="java.lang.Long" resultMap="HomeworkResultMap">
        SELECT h.*, u.username AS teacher_name, c.title AS course_title
        FROM homework h
                 LEFT JOIN user u ON h.teacher_id = u.id
                 LEFT JOIN course c ON h.course_id = c.id
        WHERE h.teacher_id = #{teacherId}
        ORDER BY h.create_time DESC
    </select>

    <select id="selectHomeworkByCourseId" parameterType="java.lang.Long" resultMap="HomeworkResultMap">
        SELECT h.*, u.username AS teacher_name, c.title AS course_title
        FROM homework h
                 LEFT JOIN user u ON h.teacher_id = u.id
                 LEFT JOIN course c ON h.course_id = c.id
        WHERE h.course_id = #{courseId}
        ORDER BY h.create_time DESC
    </select>

    <select id="selectAvailableHomeworkByStudentId" parameterType="java.lang.Long" resultMap="HomeworkResultMap">
        SELECT h.*, u.username AS teacher_name, c.title AS course_title
        FROM homework h
                 LEFT JOIN user u ON h.teacher_id = u.id
                 LEFT JOIN course c ON h.course_id = c.id
                 INNER JOIN student_course sc ON h.course_id = sc.course_id
        WHERE sc.student_id = #{studentId}
          AND sc.status = 1
          AND h.status = 'PUBLISHED'
          AND h.end_time > NOW()
        ORDER BY h.end_time DESC
    </select>

    <select id="selectHomeworkByStudentId" parameterType="java.lang.Long" resultMap="HomeworkResultMap">
        SELECT h.*, u.username AS teacher_name, c.title AS course_title
        FROM homework h
                 LEFT JOIN user u ON h.teacher_id = u.id
                 LEFT JOIN course c ON h.course_id = c.id
                 INNER JOIN student_course sc ON h.course_id = sc.course_id
        WHERE sc.student_id = #{studentId}
          AND sc.status = 1
          AND h.status = 'PUBLISHED'
        ORDER BY h.create_time DESC
    </select>

    <update id="updateHomeworkStatus">
        UPDATE homework SET
                            status = #{status},
                            update_time = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- ================ 课程相关SQL ================ -->
    <select id="selectStudentIdsByCourseId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT student_id FROM student_course
        WHERE course_id = #{courseId} AND status = 1
    </select>

    <select id="selectCoursesByTeacherId" resultType="map">
        SELECT id, title, description, cover_img, teacher_name, status, create_time, update_time
        FROM course
        WHERE teacher_name = #{teacherName}
        ORDER BY create_time DESC
    </select>

    <select id="selectCoursesByStudentId" parameterType="java.lang.Long" resultType="map">
        SELECT c.id, c.title, c.description, c.cover_img, c.teacher_name, c.status,
               sc.enroll_time, c.create_time, c.update_time
        FROM course c
                 INNER JOIN student_course sc ON c.id = sc.course_id
        WHERE sc.student_id = #{studentId} AND sc.status = 1
        ORDER BY sc.enroll_time DESC
    </select>

    <select id="checkStudentCourseAccess" resultType="boolean">
        SELECT COUNT(*) > 0 FROM student_course
        WHERE student_id = #{studentId} AND course_id = #{courseId} AND status = 1
    </select>

    <select id="checkTeacherCourseAccess" resultType="boolean">
        SELECT COUNT(*) > 0 FROM course
        WHERE teacher_id = #{teacherId} AND id = #{courseId}
    </select>

    <!-- ================ 作业题目管理SQL ================ -->
    <insert id="insertHomeworkQuestion" parameterType="com.csu.sms.model.homework.HomeworkQuestion"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO homework_questions (
            homework_id, question_order, question_type, question_content,
            question_options, correct_answer, score, analysis
        ) VALUES (
                     #{homeworkId}, #{questionOrder}, #{questionType}, #{questionContent},
                     #{questionOptions}, #{correctAnswer}, #{score}, #{analysis}
                 )
    </insert>

    <insert id="batchInsertHomeworkQuestions" parameterType="list">
        INSERT INTO homework_questions (
        homework_id, question_order, question_type, question_content,
        question_options, correct_answer, score, analysis
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.homeworkId}, #{item.questionOrder}, #{item.questionType}, #{item.questionContent},
            #{item.questionOptions}, #{item.correctAnswer}, #{item.score}, #{item.analysis})
        </foreach>
    </insert>

    <update id="updateHomeworkQuestion" parameterType="com.csu.sms.model.homework.HomeworkQuestion">
        UPDATE homework_questions SET
                                      question_order = #{questionOrder},
                                      question_type = #{questionType},
                                      question_content = #{questionContent},
                                      question_options = #{questionOptions},
                                      correct_answer = #{correctAnswer},
                                      score = #{score},
                                      analysis = #{analysis}
        WHERE id = #{id}
    </update>

    <delete id="deleteHomeworkQuestion" parameterType="java.lang.Long">
        DELETE FROM homework_questions WHERE id = #{id}
    </delete>

    <delete id="deleteHomeworkQuestionsByHomeworkId" parameterType="java.lang.Long">
        DELETE FROM homework_questions WHERE homework_id = #{homeworkId}
    </delete>

    <select id="selectHomeworkQuestionById" parameterType="java.lang.Long" resultMap="HomeworkQuestionResultMap">
        SELECT * FROM homework_questions WHERE id = #{id}
    </select>

    <select id="selectHomeworkQuestionsByHomeworkId" parameterType="java.lang.Long" resultMap="HomeworkQuestionResultMap">
        SELECT * FROM homework_questions
        WHERE homework_id = #{homeworkId}
        ORDER BY question_order
    </select>

    <!-- ================ 作业提交管理SQL ================ -->
    <insert id="insertHomeworkSubmission" parameterType="com.csu.sms.model.homework.HomeworkSubmission"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO homework_submissions (
            homework_id, student_id, submit_times, total_score, status
        ) VALUES (
                     #{homeworkId}, #{studentId}, #{submitTimes}, #{totalScore}, #{status}
                 )
    </insert>

    <update id="updateHomeworkSubmission" parameterType="com.csu.sms.model.homework.HomeworkSubmission">
        UPDATE homework_submissions SET
                                        submit_times = #{submitTimes},
                                        submit_time = CURRENT_TIMESTAMP,
                                        total_score = #{totalScore},
                                        status = #{status},
                                        update_time = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <update id="updateHomeworkGrade" parameterType="com.csu.sms.model.homework.HomeworkSubmission">
        UPDATE homework_submissions SET
                                        total_score = #{totalScore},
                                        status = #{status},
                                        teacher_feedback = #{teacherFeedback},
                                        grade_time = CURRENT_TIMESTAMP,
                                        graded_by = #{gradedBy},
                                        update_time = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <select id="selectHomeworkSubmissionById" parameterType="java.lang.Long" resultMap="HomeworkSubmissionResultMap">
        SELECT hs.*, u.username AS student_name
        FROM homework_submissions hs
                 LEFT JOIN user u ON hs.student_id = u.id
        WHERE hs.id = #{id}
    </select>

    <select id="selectHomeworkSubmissionsByHomeworkIdAndStudentId" resultMap="HomeworkSubmissionResultMap">
        SELECT
            hs.*,
            u.username AS student_name,
            h.title AS homework_title,
            c.title AS course_title
        FROM homework_submissions hs
                 LEFT JOIN user u ON hs.student_id = u.id
                 LEFT JOIN homework h ON hs.homework_id = h.id
                 LEFT JOIN course c ON h.course_id = c.id
        WHERE hs.homework_id = #{homeworkId} AND hs.student_id = #{studentId}
        ORDER BY hs.submit_times DESC
    </select>

    <select id="selectHomeworkSubmissionsByHomeworkId" parameterType="java.lang.Long" resultMap="HomeworkSubmissionResultMap">
        SELECT hs.*, u.username AS student_name
        FROM homework_submissions hs
                 LEFT JOIN user u ON hs.student_id = u.id
        WHERE hs.homework_id = #{homeworkId}
        ORDER BY hs.submit_time ASC
    </select>

    <select id="selectHomeworkSubmissionsByStudentId" parameterType="java.lang.Long" resultMap="HomeworkSubmissionResultMap">
        SELECT
            hs.*,
            u.username AS student_name,
            h.title AS homework_title,
            c.id AS course_id,
            c.title AS course_title,
            g.username AS grader_name
        FROM homework_submissions hs
                 LEFT JOIN user u ON hs.student_id = u.id
                 LEFT JOIN homework h ON hs.homework_id = h.id
                 LEFT JOIN course c ON h.course_id = c.id
                 LEFT JOIN user g ON hs.graded_by = g.id
        WHERE hs.student_id = #{studentId}
        ORDER BY hs.submit_time ASC
    </select>

    <select id="selectHomeworkSubmissionsByCourseId" parameterType="java.lang.Long" resultMap="HomeworkSubmissionResultMap">
        SELECT hs.*, u.username AS student_name
        FROM homework_submissions hs
                 LEFT JOIN user u ON hs.student_id = u.id
                 LEFT JOIN homework h ON hs.homework_id = h.id
        WHERE h.course_id = #{courseId}
        ORDER BY hs.submit_time ASC
    </select>

    <select id="countSubmissionsByHomeworkIdAndStudentId" resultType="int">
        SELECT COUNT(*) FROM homework_submissions
        WHERE homework_id = #{homeworkId} AND student_id = #{studentId}
    </select>

    <!-- ================ 作业答案管理SQL ================ -->
    <insert id="insertHomeworkAnswer" parameterType="com.csu.sms.model.homework.HomeworkAnswer"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO homework_answers (
            submission_id, question_id, student_answer, score, is_correct, teacher_comment
        ) VALUES (
                     #{submissionId}, #{questionId}, #{studentAnswer}, #{score}, #{isCorrect}, #{teacherComment}
                 )
    </insert>

    <insert id="batchInsertHomeworkAnswers" parameterType="list">
        INSERT INTO homework_answers (
        submission_id, question_id, student_answer, score, is_correct, teacher_comment
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.submissionId}, #{item.questionId}, #{item.studentAnswer},
            #{item.score}, #{item.isCorrect}, #{item.teacherComment})
        </foreach>
    </insert>

    <update id="updateHomeworkAnswer" parameterType="com.csu.sms.model.homework.HomeworkAnswer">
        UPDATE homework_answers SET
                                    student_answer = #{studentAnswer},
                                    score = #{score},
                                    is_correct = #{isCorrect},
                                    teacher_comment = #{teacherComment},
                                    update_time = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <update id="updateHomeworkAnswerScore" parameterType="com.csu.sms.model.homework.HomeworkAnswer">
        UPDATE homework_answers SET
                                    score = #{score},
                                    is_correct = #{isCorrect},
                                    teacher_comment = #{teacherComment},
                                    update_time = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <delete id="deleteHomeworkAnswersBySubmissionId" parameterType="java.lang.Long">
        DELETE FROM homework_answers WHERE submission_id = #{submissionId}
    </delete>

    <select id="selectHomeworkAnswersBySubmissionId" parameterType="java.lang.Long" resultMap="HomeworkAnswerResultMap">
        SELECT ha.*, hq.question_content, hq.correct_answer, hq.score AS question_score
        FROM homework_answers ha
                 LEFT JOIN homework_questions hq ON ha.question_id = hq.id
        WHERE ha.submission_id = #{submissionId}
        ORDER BY hq.question_order
    </select>

    <!-- ================ 统计查询SQL ================ -->
    <select id="selectHomeworkStatistics" parameterType="java.lang.Long" resultType="map">
        WITH latest_submissions AS (
            SELECT
                hs.student_id,
                hs.status,
                hs.total_score,
                ROW_NUMBER() OVER (PARTITION BY hs.student_id ORDER BY hs.submit_time DESC) as rn
            FROM homework_submissions hs
            WHERE hs.homework_id = #{homeworkId}
        )
        SELECT
            COUNT(DISTINCT ls.student_id) AS submitted_count,
            COUNT(DISTINCT sc.student_id) AS total_student_count,
            AVG(CASE WHEN ls.rn = 1 THEN ls.total_score ELSE NULL END) AS avg_score,
            MAX(CASE WHEN ls.rn = 1 THEN ls.total_score ELSE NULL END) AS max_score,
            MIN(CASE WHEN ls.rn = 1 THEN ls.total_score ELSE NULL END) AS min_score,
            COUNT(DISTINCT CASE WHEN ls.rn = 1 AND ls.status = 'GRADED' THEN ls.student_id ELSE NULL END) AS graded_count
        FROM homework h
                 LEFT JOIN student_course sc ON h.course_id = sc.course_id AND sc.status = 1
                 LEFT JOIN latest_submissions ls ON ls.rn = 1
        WHERE h.id = #{homeworkId}
    </select>

    <select id="selectStudentHomeworkProgress" parameterType="java.lang.Long" resultType="map">
        SELECT
            h.id,
            h.title,
            h.end_time,
            h.total_score AS full_score,
            c.title AS course_title,
            hs.total_score AS student_score,
            hs.status,
            hs.submit_time,
            hs.teacher_feedback
        FROM homework h
                 INNER JOIN student_course sc ON h.course_id = sc.course_id
                 INNER JOIN course c ON h.course_id = c.id
                 LEFT JOIN homework_submissions hs ON h.id = hs.homework_id AND hs.student_id = #{studentId}
        WHERE sc.student_id = #{studentId} AND sc.status = 1 AND h.status = 'PUBLISHED'
        ORDER BY h.end_time ASC
    </select>

    <select id="selectCourseHomeworkStatistics" parameterType="java.lang.Long" resultType="map">
        SELECT
            COUNT(h.id) AS total_homework_count,
            COUNT(CASE WHEN h.status = 'PUBLISHED' THEN 1 END) AS published_homework_count,
            COUNT(DISTINCT hs.student_id) AS active_student_count,
            AVG(hs.total_score) AS avg_score
        FROM homework h
                 LEFT JOIN homework_submissions hs ON h.id = hs.homework_id
        WHERE h.course_id = #{courseId}
    </select>

</mapper>